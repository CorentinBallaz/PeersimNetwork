random.seed 1587894770416


#Nombre de simulations consecutives
simulation.experiments 1

#date de fin de la simulation
simulation.endtime 1

#taille du reseau
network.size 100

# #nombre de voisins minimum et maximum (minimum 2 et max < network.size) 
node.nbVoisinsMin 5
node.nbVoisinsMax 9

# fréquence de sortie en jour d'une personne
minGoingOutFrequency 3
maxGoingOutFrequency 10

# âge d'une personne
minYearOld 1
maxYearOld 100

#nombre de noeuds infectés au départ
nbNodeInfected 3
# ::::: LAYERS :::::
#definition de la couche transport
#protocol.transport virus.VirusTransport

#latence minimale
#protocol.transport.mindelay 80

#latence maximale
#protocol.transport.maxdelay 120


#definition de la couche applicative (le hello world)
protocol.applicative virus.VirusApp

#liaison entre la couche applicative et la couche transport
#protocol.applicative.transport transport

#pour que la couche applicative connaisse son pid
protocol.applicative.myself applicative


# ::::: INITIALIZER :::::

#declaration d'un module d'initialisation
init.initializer virus.Initializer

#pour que le module connaisse le pid de la couche applicative
init.initializer.virusAppProtocolPid applicative


# ::::: CONTROLLER :::::

#declaration d'un module de contrôle
control.controllerEvent virus.ControllerEvent

#pour que le module connaisse le pid de la couche applicative
control.controllerEvent.virusAppProtocolPid applicative

#temps d'exécution d'une étape, donc d'un controllerEvent.execute()
control.controllerEvent.step 1

#represent la moment de l'introduction du vaccin, represent un pourcentage du temps total

control.controllerEvent.vaccineBegin 0.5

#represent le pourcentage de population (non vacciner ) a vacciner à chaque controllerEvent

control.controllerEvent.percentageVaccinated 0.50


# representent le nombre de jours à permettant la guerisons en moyenne

protocol.applicative.timeToRecovered 10